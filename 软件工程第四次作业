#include<stdio.h>
#include<iostream>
#include <stdlib.h>
#include <time.h>
using namespace std;
typedef struct {
	float figure[4];
	char symbol[3];
	int bracket[2];//括号
}equation;
int questionnumber;//问题数量
char operateCharacter[4]; //运算符数组
int operatenum = 0;//运算符数量
int isbracket;//括号
int isdecimal;//小数
int maxnumber;//最大数
int printway;//输出方式
equation expression[100];
int random(int y)//随机数函数
{
	int n;
	n = rand() % (y + 1);
	return n;
}
void screen()
{
	printf("请设置题目个数:\n");
	scanf("%d%c", &questionnumber);
	printf("请选择运算符: + - * / \n");
	for (int i = 0;; i++)
	{
		char c;
		scanf("%c", &c);
		if (c == '\n') break;
		else {
			operateCharacter[i] = c;
			operatenum++;
		}
	}
	printf("请输入最大数:\n");
	scanf_s("%d", &maxnumber);
	printf("是否有括号: 0无括号 1有括号 \n");
	scanf_s("%d", &isbracket);
	printf("是否有小数: 0无小数 1有小数 \n");
	scanf_s("%d", &isdecimal);
	printf("输出方式: 0文件 1屏幕 \n");
	scanf_s("%d", &printway);
}
void arithmetic()
{
	int i = 0;
	int k = 0;
	int m = questionnumber;
	while (m-- > 0)
	{

		if (isdecimal == 0)
		{
			while (k <= 4)
			{
				expression[i].figure[k] = random(maxnumber);
				k++;
			}
		}
		else
		{
			while (k <= 4)
			{
				float a = float(random(maxnumber * 100));
				expression[i].figure[k] = a / 100;
				k++;
			}
		}
		for (int j = 0; j < 3; j++)
		{
			expression[i].symbol[j] = operateCharacter[random(operatenum - 1)];
		}
		expression[i].bracket[0] = random(2);
		if (expression[i].bracket[0] == 0) expression[i].bracket[1] = 1 + random(1);
		if (expression[i].bracket[0] == 1) expression[i].bracket[1] = 2 + random(1);
		if (expression[i].bracket[0] == 2) expression[i].bracket[1] = 3;
		i++;
		k = 0;
	}
}
void show1()
{
	if (isdecimal == 0) {
		if (isbracket == 0)
		{
			for (int i = 0; i < questionnumber; i++)
			{
				for (int j = 0; j < 3; j++)
				{
					printf("%.0f", expression[i].figure[j]);
					printf("%c", expression[i].symbol[j]);
				}
				printf("%.0f=\n", expression[i].figure[3]);
			}
		}
		else
		{
			for (int i = 0; i < questionnumber; i++)
			{
				int j;
				for (j = 0; j < 3; j++)
				{
					if (j == expression[i].bracket[0]) printf("(");
					printf("%.0f", expression[i].figure[j]);
					if (j == expression[i].bracket[1]) printf(")");
					printf("%c", expression[i].symbol[j]);
				}
				printf("%.0f", expression[i].figure[3]);
				if (j == expression[i].bracket[1]) printf(")");
				printf("=\n");
			}
		}
	}
	else {
		if (isbracket == 0)
		{
			for (int i = 0; i < questionnumber; i++)
			{
				for (int j = 0; j < 3; j++)
				{
					printf("%.2f", expression[i].figure[j]);
					printf("%c", expression[i].symbol[j]);
				}
				printf("%.2f=\n", expression[i].figure[3]);
			}
		}
		else
		{
			for (int i = 0; i < questionnumber; i++)
			{
				int j;
				for (j = 0; j < 3; j++)
				{
					if (j == expression[i].bracket[0]) printf("(");
					printf("%.2f", expression[i].figure[j]);
					if (j == expression[i].bracket[1]) printf(")");
					printf("%c", expression[i].symbol[j]);
				}
				printf("%.2f", expression[i].figure[3]);
				if (j == expression[i].bracket[1]) printf(")");
				printf("=\n");
			}
		}
	}

}
void show0()
{
	FILE* fp;
	fp = fopen("2.txt", "w");
	if (isdecimal == 0) {
		if (isbracket == 0)
		{
			for (int i = 0; i < questionnumber; i++)
			{
				for (int j = 0; j < 3; j++)
				{
					fprintf(fp, "%.0f", expression[i].figure[j]);
					fprintf(fp, "%c", expression[i].symbol[j]);
				}
				fprintf(fp, "%.0f=\n", expression[i].figure[3]);
			}
		}
		else
		{
			for (int i = 0; i < questionnumber; i++)
			{
				int j;
				for (j = 0; j < 3; j++)
				{
					if (j == expression[i].bracket[0]) fprintf(fp, "(");
					fprintf(fp, "%.0f", expression[i].figure[j]);
					if (j == expression[i].bracket[1]) fprintf(fp, ")");
					fprintf(fp, "%c", expression[i].symbol[j]);
				}
				fprintf(fp, "%.0f", expression[i].figure[3]);
				if (j == expression[i].bracket[1]) fprintf(fp, ")");
				fprintf(fp, "=\n");
			}
		}
	}
	else {
		if (isbracket == 0)
		{
			for (int i = 0; i < questionnumber; i++)
			{
				for (int j = 0; j < 3; j++)
				{
					fprintf(fp, "%.2f", expression[i].figure[j]);
					fprintf(fp, "%c", expression[i].symbol[j]);
				}
				fprintf(fp, "%.2f=\n", expression[i].figure[3]);
			}
		}
		else
		{
			for (int i = 0; i < questionnumber; i++)
			{
				int j;
				for (j = 0; j < 3; j++)
				{
					if (j == expression[i].bracket[0]) fprintf(fp, "(");
					fprintf(fp, "%.2f", expression[i].figure[j]);
					if (j == expression[i].bracket[1]) fprintf(fp, ")");
					fprintf(fp, "%c", expression[i].symbol[j]);
				}
				fprintf(fp, "%.2f", expression[i].figure[3]);
				if (j == expression[i].bracket[1]) fprintf(fp, ")");
				fprintf(fp, "=\n");
			}
		}
	}

}

int main()
{
	srand(time(NULL));
	screen();
	arithmetic();
	if (printway == 1)
		show1();
	else
		show0();
}
